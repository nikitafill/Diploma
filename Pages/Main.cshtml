@page
@model DiplomaProject.Pages.MainModel
@{
    ViewData["Title"] = "Группы экспериментов";
}

<h2>Группы экспериментов</h2>

<div style="margin-bottom: 15px; display: flex; gap: 10px; align-items: center;">
    <button id="addGroupButton" class="btn btn-primary" onclick="toggleForm()">Добавить группу</button>

    <button id="startCameraBtn" class="btn btn-success" onclick="startCameraRecording()">Запись с камеры</button>
    <button id="startScreenBtn" class="btn btn-info" onclick="startScreenRecording()">Запись с экрана</button>
    <button id="stopRecordingBtn" class="btn btn-danger" style="display: none;" onclick="stopRecording()">Остановить запись</button>
</div>
<video id="preview" width="640" height="480" autoplay muted style="display: none; border: 1px solid #ccc; margin-bottom: 15px;"></video>
<div id="addGroupForm" style="display:none; margin-top: 20px;">
    <form method="post" asp-page-handler="Add">
        <input asp-for="NewGroup.Name" class="form-control" placeholder="Введите название группы" required />
        <button type="submit" class="btn btn-primary" style="margin-top: 10px">Добавить</button>
        <button type="button" class="btn btn-secondary" style="margin-top: 10px" onclick="toggleForm()">Отмена</button>
    </form>
</div>

<hr />

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Название</th>
            <th>Действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var group in Model.Groups)
        {
            <tr>
                <td>@group.Id</td>
                <td>
                    <a asp-page="/Index" asp-route-groupId="@group.Id">
                        @group.Name
                    </a>
                </td>
                <td>
                    <form method="post" asp-page-handler="Delete" onsubmit="return confirm('Вы уверены, что хотите удалить эту группу?');">
                        <input type="hidden" name="id" value="@group.Id" />
                        <button class="btn btn-danger btn-sm">Удалить</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function toggleForm() {
        const form = document.getElementById('addGroupForm');
        const button = document.getElementById('addGroupButton');

        if (form.style.display === "none") {
            form.style.display = "block";
            button.style.display = "none";
        } else {
            form.style.display = "none";
            button.style.display = "inline-block";
        }
    }
</script>

<script>
    let mediaRecorder;
    let recordedChunks = [];

    async function startCameraRecording() {
        const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });
        startRecording(stream);
    }

    async function startScreenRecording() {
        const stream = await navigator.mediaDevices.getDisplayMedia({ video: true, audio: true });
        startRecording(stream);
    }

    function startRecording(stream) {
        const preview = document.getElementById('preview');
        preview.srcObject = stream;
        preview.style.display = 'block';

        recordedChunks = [];
        mediaRecorder = new MediaRecorder(stream);

        mediaRecorder.ondataavailable = function (e) {
            if (e.data.size > 0) recordedChunks.push(e.data);
        };

        mediaRecorder.onstop = function () {
            const blob = new Blob(recordedChunks, { type: "video/webm" });
            const url = URL.createObjectURL(blob);

            const a = document.createElement("a");
            a.href = url;
            a.download = "recording.webm";
            a.click();

            URL.revokeObjectURL(url);

            stream.getTracks().forEach(track => track.stop());
            preview.srcObject = null;
            preview.style.display = 'none'; 
        };

        mediaRecorder.start();

        document.getElementById("startCameraBtn").style.display = "none";
        document.getElementById("startScreenBtn").style.display = "none";
        document.getElementById("stopRecordingBtn").style.display = "inline-block";
    }


    function stopRecording() {
        if (mediaRecorder && mediaRecorder.state !== "inactive") {
            mediaRecorder.stop();
        }

        document.getElementById("startCameraBtn").style.display = "inline-block";
        document.getElementById("startScreenBtn").style.display = "inline-block";
        document.getElementById("stopRecordingBtn").style.display = "none";
    }
</script>

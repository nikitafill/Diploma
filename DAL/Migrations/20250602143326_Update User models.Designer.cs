// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DiplomaProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250602143326_Update User models")]
    partial class UpdateUsermodels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DiplomaProject.DAL.Models.ExperimentGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FramesDirectory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ExperimentGroups");
                });

            modelBuilder.Entity("DiplomaProject.DAL.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("DiplomaProject.DAL.Models.RingRadius", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("RadiusCm")
                        .HasColumnType("real");

                    b.Property<int>("VideoAnalysisId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VideoAnalysisId");

                    b.ToTable("RingsRadiuses");
                });

            modelBuilder.Entity("DiplomaProject.DAL.Models.StudentAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ExperimentId")
                        .HasColumnType("integer");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("StudentAnswers");
                });

            modelBuilder.Entity("DiplomaProject.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DiplomaProject.DAL.Models.VideoAnalysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("CentreX")
                        .HasColumnType("real");

                    b.Property<float>("CentreY")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExtractedFramePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<float>("PixelsPerCm")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("VideoAnalyses");
                });

            modelBuilder.Entity("DiplomaProject.DAL.Models.ExperimentGroup", b =>
                {
                    b.HasOne("DiplomaProject.DAL.Models.User", null)
                        .WithMany("ExperimentGroups")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("DiplomaProject.DAL.Models.RingRadius", b =>
                {
                    b.HasOne("DiplomaProject.DAL.Models.VideoAnalysis", "VideoAnalysis")
                        .WithMany("Radii")
                        .HasForeignKey("VideoAnalysisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VideoAnalysis");
                });

            modelBuilder.Entity("DiplomaProject.DAL.Models.StudentAnswer", b =>
                {
                    b.HasOne("DiplomaProject.DAL.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("DiplomaProject.DAL.Models.VideoAnalysis", b =>
                {
                    b.HasOne("DiplomaProject.DAL.Models.ExperimentGroup", "Group")
                        .WithMany("Experiments")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("DiplomaProject.DAL.Models.ExperimentGroup", b =>
                {
                    b.Navigation("Experiments");
                });

            modelBuilder.Entity("DiplomaProject.DAL.Models.User", b =>
                {
                    b.Navigation("ExperimentGroups");
                });

            modelBuilder.Entity("DiplomaProject.DAL.Models.VideoAnalysis", b =>
                {
                    b.Navigation("Radii");
                });
#pragma warning restore 612, 618
        }
    }
}
